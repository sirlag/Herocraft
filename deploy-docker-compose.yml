services:
  database:
    container_name: "postgres"
    image: 'postgres:16.8'
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: herocrafter
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
    volumes:
      - /mnt/user/Apps/herocraft-postgres/data:/var/lib/postgresql/data
    networks:
      - core-network
  cache:
    container_name: "redis"
    image: 'redis:8.0-rc1-alpine'
    ports:
      - "6379:6379"
    volumes:
      - /mnt/user/Apps/herocraft-redis:/data
    networks:
      - core-network
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
  server:
    container_name: "herocraft-server"
    image: 'ghcr.io/sirlag/herocraft:latest'
    ports:
      - "8080:8080"
    networks:
      - core-network
    depends_on:
      database:
        condition: service_healthy
      cache:
        condition: service_healthy
    labels:
      traefik.enable: "true"
      traefik.http.routers.herocraft-server: "websecure"
      traefik.http.routers.herocraft-server.rule: "Host(`api.herocraft.app`)"
      traefik.http.services.herocraft-server.loadbalancer.server.port: "8080"

networks:
  core-network:
    external: true